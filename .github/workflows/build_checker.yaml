name: BuildChecker

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/daemon
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES }}" | base64 --decode > app/google-services.json

      - name: Grant gradlew permissions
        run: chmod +x ./gradlew


      - name: Build with Gradle
        run: ./gradlew assembleDebug -x koverVerify

      - name: Decode service account
        run: echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 --decode > service-account.json
      - name: Set Firebase credentials env var
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=service-account.json" >> $GITHUB_ENV

      - name: Upload APK using Firebase CLI
        run: |
          npm install -g firebase-tools
          firebase appdistribution:distribute \
            app/build/outputs/apk/debug/app-debug.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "${{ secrets.FIREBASE_TESTER_GROUPS }}" \
            --release-notes "CI Upload via service account"